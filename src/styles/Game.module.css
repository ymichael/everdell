.container {
  padding: 0.5rem;
  display: flex;
  justify-content: center;
  flex-direction: column;
  color: var(--text-color);
  width: 1420px;
  position: relative;
  min-height: 100vh;
  padding-bottom: 70px; /* Adjust this value to match your sticky bar height */
}
.stickyBarContainer {
  position: relative; /* Allow absolute positioning of the button */
}
.stickyBar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 10px;
  background-color: var(--bg-color);
  display: flex;
  width: auto;
  align-items: center;
  z-index: 11;
}

.stickyBarContent {
  flex-grow: 1;
  overflow: hidden; /* Hide content when stickyBar is collapsed */
  transition: height 0.3s ease; /* Add transition for smooth collapse */
}

.stickyBar.hidden .stickyBarContent {
  height: 0; /* Collapse the content when stickyBar is hidden */
}

.sticky_bar_item {
  display: flex;
  width: fit-content;
}

.collapseButton {
  position: fixed; /* Position the button absolutely */
  bottom: 20px; /* Adjust vertical position as needed */
  left: 20px; /* Adjust horizontal position as needed */
  margin-inline-end: 24px;
  border-radius: 50%;
  padding: 16px;
  transition: opacity 0.3s ease;
  cursor: pointer;
  z-index: 12; /* Ensure button stays on top */
}

.collapseButton:hover {
  background-color: var(--highlight-color);
}

.collapseButton > svg {
  display: block;
  margin: 0 auto;
}

.collapseButton.clicked {
  transform: rotate(180deg);
}

.stickyBarContainer .collapseButton {
  opacity: 0; /* Make the button fully transparent when hidden */
}

.stickyBarContainer .collapseButton:hover {
  opacity: 1; /* Make the button fully opaque on hover */
  transition: opacity 0s ease; /* Remove transition delay on hover */
}
